{"version":3,"sources":["../node_modules/peerjs/dist sync","component/Restarant_card/Card.js","component/Dialog/Dialog.js","component/Restarant_card/RatingCard.js","component/Restarant_card/RatingPanel.js","component/Restarant_card/Panel.js","action/user.js","reducer/user.js","action/error.js","reducer/error.js","stores/index.js","component/Navbar/Error.js","component/Navbar/LoginForm.js","component/Navbar/SignupForm.js","component/P2pPanel/AskForHelp.js","component/P2pPanel/ProvideHelp.js","component/Navbar/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Card","props","className","classList","style","width","src","img","alt","name","href","url","target","Dialog","display","show","dialog","onClick","console","log","currentTarget","toggleShow","children","ReactDOM","createPortal","document","body","RatingCard","maxHeight","addScore","nextRestaurant","index","background","color","marginLeft","RatingPanel","useState","setIndex","showRestaurantCard","scores","setScore","restaurants","length","restaurantCard","image_url","categories","score","newScores","slice","push","showBanner","login","flex","connect","state","user","list","recommendation","setRecommendation","useEffect","userID","position","latitude","longitude","fetch","method","mode","then","response","json","res","i","business_id","restaurantsPromiseArr","map","restaurant","headers","Promise","all","rawRestaurantsArr","restaurantsJSON","status","JSON","parse","data","getRecommendation","restaurantList","key","closeRatingPanel","initUser","type","userName","username","action","setError","error","message","rootReducer","combineReducers","store","createStore","LoginForm","errorBlock","setUser","class","htmlFor","value","onChange","password","preventDefault","SignupForm","repeatpassword","signup","submitNewUser","recoLink","setState","text","setText","Peer","peer","candidates","setCandidate","pickUser","otherUser","setOtherUser","connection","setConnection","recommdation","setRecommdation","on","send","candidateList","candidate","conn","overflow","candidateId","split","ProvideHelp","setConn","setRes","longtitude","restaurantsList","server_url","dispatch","credentials","stringify","catch","String","init","toggleLoginDialog","toggleSignUpDialog","logo","App","Boolean","window","location","hostname","match","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.74dbeca4.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 31;","import React from 'react'\nimport './Card.css'\n\nfunction Card(props){\n    return (\n        <div className={props.classList + \"card myCard\"} style={{width: \"18rem\"}}>\n            <img src={props.img} className=\"card-img-top\" alt=\"...\"/>\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">{props.name}</h5>\n                <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n                <a href={props.url} className=\"btn btn-primary\" target=\"_blank\">Details</a>\n            </div>\n        </div>\n    )\n}\n\nexport default Card","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport './Dialog.css'\n\nfunction Dialog(props){\n    let style = {\n        display: (props.show)? \"inherit\" : \"none\"\n    }\n\n    function closeDialog(e){\n        console.log('clicked!')\n        if(e.target===e.currentTarget) props.toggleShow(false);\n    }\n\n    const dialog =  (\n        <div className='Dialog' style={style}>\n            <div className='DialogCover' onClick={closeDialog}></div>\n            {props.children}\n        </div>\n    )\n\n    return  (\n        ReactDOM.createPortal(dialog, document.body)\n    )\n}\n\n\nexport default Dialog","import React from 'react'\nimport './Card.css'\n\nfunction RatingCard(props){\n    return (\n        <div className={props.classList + \"card myCard\"}>\n            <img src={props.img} style={{maxHeight:\"400px\"}} className=\"card-img-top\" alt=\"...\"/>\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">{props.name}</h5>\n                    <button onClick={()=>{props.addScore(5); props.nextRestaurant(props.index+1)}} style={{background:'rgb(136,167,179)', color:\"white\"}}className=\"btn\">Like it!</button>\n                    <button onClick={()=>{props.addScore(1); props.nextRestaurant(props.index+1)}}  style={{background:'rgb(196,150,168)', color:\"white\", marginLeft:'10px'}} className=\"btn\">No No No</button>\n            </div>\n        </div>\n    )\n}\n\nexport default RatingCard","import React, { useState } from \"react\";\nimport Dialog from \"../Dialog/Dialog\";\nimport RatingCard from \"./RatingCard\";\n\nfunction RatingPanel(props) {\n  const [index, setIndex] = useState(0);\n  const [showRestaurantCard, toggleShow] = useState(false);\n  const [scores, setScore] = useState([]);\n\n  const nextRestaurant = (restaurants) => {\n    return (index) => {\n      if (index === restaurants.length) {\n        toggleShow(false);\n      }\n      setIndex(index);\n    };\n  };\n\n  const addScore = (score) => {\n    let newScores = scores.slice();\n    newScores.push(score);\n    setScore(newScores);\n  };\n\n  if (index === props.restaurants.length) {\n    return <div></div>;\n  }\n\n  const restaurantCard = (\n    <RatingCard\n      classList=\"DialogContent Diaglog-card\"\n      img={props.restaurants[index].image_url}\n      name={props.restaurants[index].name}\n      categories={props.restaurants[index].categories}\n      nextRestaurant={nextRestaurant(props.restaurants)}\n      addScore={addScore}\n      index={index}\n    />\n  );\n\n  let showBanner = props.login\n    ? `You have to finish your initial review, ${\n        props.restaurants.length - index\n      } businesses remained`\n    : \"You should log in before you check your recommendation\";\n\n  return (\n    <div className=\"mask\">\n      <div className=\"mask-layer\"></div>\n      <div className=\"mask-banner\">\n        <h1 style={{ flex: \"0 0 100%\" }}>{showBanner}</h1>\n        <button\n          onClick={() => {\n            toggleShow(true);\n          }}\n          style={{ background: \"rgb(136,167,179)\", color: \"white\" }}\n          className=\"btn mask-button\"\n        >\n          show it!\n        </button>\n      </div>\n      <Dialog show={showRestaurantCard} toggleShow={toggleShow}>\n        {restaurantCard}\n      </Dialog>\n    </div>\n  );\n}\n\nexport default RatingPanel;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Card from \"./Card\";\nimport \"./Panel.css\";\nimport RatingPanel from \"./RatingPanel\";\n\nfunction Panel(props) {\n  let showBanner;\n  const [recommendation, setRecommendation] = useState({show:false, list:[]});\n\n  const getRecommendation = (setRecommendation) => {\n    let url = `http://ec2-18-208-177-247.compute-1.amazonaws.com:5000?user_id=${props.user.userID}&latitude=${props.user.position.latitude}&longtitude=${props.user.position.longitude}`;\n    fetch(url, {\n      method: \"GET\",\n      mode:'cors'\n    })\n      .then((response) => response.json())\n      .then((res) => {\n        let restaurants = [];\n        if(res[\"10\"] === 1){\n          for(let i = 0; i < 10; i++){\n            restaurants.push(res[i]);\n          }\n        }else{\n          for(let i = 0; i < 10; i++){\n            restaurants.push(res[i].business_id)\n          }\n        }\n        let restaurantsPromiseArr = restaurants.map((restaurant) => {\n          return fetch(\n            \"http://ec2-3-83-164-100.compute-1.amazonaws.com:8088/yelp-fusion/requestRecommendByID.do\",\n            {\n              method: \"POST\",\n              mode: \"cors\",\n              headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n              },\n              body: `restaurantID=${restaurant}`,\n            }\n          ).then((response) => response.json());\n        });\n        Promise.all(restaurantsPromiseArr).then((rawRestaurantsArr) => {\n          let restaurantsJSON = []\n          for(let restaurant in rawRestaurantsArr){\n            if(restaurant.status === 0)\n              restaurantsJSON.push(JSON.parse(restaurant.data))\n          }\n          setRecommendation({list:restaurantsJSON, show:(res[\"10\"] === 1)});\n        });\n      });\n  };\n\n  useEffect(() => {\n    if(props.user.userID)\n      getRecommendation(setRecommendation);\n  },[]);\n\n  const restaurantList = recommendation.list.map((restaurant, index) => (\n    <Card\n      key={restaurant.business_id}\n      img={restaurant.image_url}\n      name={restaurant.name}\n      categories={restaurant.categories}\n      url={restaurant.url}\n    />\n  ));\n\n  return (\n    <div>\n      <RatingPanel\n        style={recommendation.show ? { display: \"none\" } : {}}\n        login={props.user.userID === null}\n        restaurants={recommendation.list}\n        closeRatingPanel={(state)=>{setRecommendation({show:state})}}\n      ></RatingPanel>\n      <div className=\"App\">{restaurantList}</div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n  };\n}\n\nexport default connect(mapStateToProps, null)(Panel);\n","export const INIT_USER = \"INIT_USER\"\nexport const GET_POSITION = \"GET_POSITION\"\n\nexport function initUser(user){\n    return {\n        type:INIT_USER,\n        userID:user.id,\n        userName:user.username\n    }\n}\n\nexport function getPosition(position){\n    return {\n        type:GET_POSITION,\n        position:position\n    }\n}","import {INIT_USER, GET_POSITION} from '../action/user'\n\nfunction user(state={}, action){\n    switch(action.type){\n        case INIT_USER:\n            return {\n                userID: action.userID,\n                userName: action.userName,\n                position:{\n                    latitude:'40',\n                    longitude:'-77',\n                }\n            }\n        case GET_POSITION:\n            return {\n                ...state,\n                position: action.position\n            }\n        default:\n            return state;\n    }\n}\n\nexport default user","export const ADD_ERROR = 'ADD_ERROR'\nexport const REMOVE_ERROR = 'REMOVE_ERROR'\n\nexport function setError(error){\n    console.log(error)\n    return {\n        type: ADD_ERROR,\n        message: error\n    }\n}\n\nexport function removeError(){\n    return {\n        type: REMOVE_ERROR\n    }\n}","import {ADD_ERROR, REMOVE_ERROR} from '../action/error'\n\nfunction error(state={}, action){\n    switch (action.type){\n        case ADD_ERROR:\n            return {\n                message: action.message\n            };\n        case REMOVE_ERROR:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport default error","import { createStore, combineReducers } from 'redux'\nimport user from '../reducer/user'\nimport error from '../reducer/error'\n\nconst rootReducer = combineReducers({user: user, error:error})\n\nconst store = createStore(rootReducer);\n\n// const unsubscribe = store.subscribe(() => console.log(store.getState()))\n\nexport default store;","import React from 'react'\nimport './Error.css'\n\nfunction Error(props){\n    return (\n        <div className='formContent error roundedborder'>\n            {props.error}\n        </div>\n    )\n}\n\nexport default Error","import React, {useState} from 'react'\nimport './form.css'\nimport Error from './Error'\n\nfunction LoginForm(props){\n    const errorBlock = (props.error)? <Error error={props.error} /> : null\n    const [user, setUser] = useState({});\n    return(\n        <form className={props.class}>\n            {errorBlock}\n            <label className='formContent' htmlFor=\"account\">Account:</label>\n            <input className='formContent roundedborder' type=\"text\" id=\"account\" name=\"account\" value={user.username} onChange={(e)=>setUser({...user, username:e.target.value})} />\n            <label className='formContent' htmlFor=\"password\">Password:</label>\n            <input className='formContent roundedborder' type=\"password\" id=\"password\" name=\"password\" value={user.password} onChange={(e)=>setUser({...user, password:e.target.value})}/>\n            <button className='formContent formBtn btn btn-info' onClick={(e)=>{e.preventDefault();props.login(user)}} >Log in</button>\n        </form>\n    )\n}\n\nexport default LoginForm;","import React, {useState} from 'react';\nimport './form.css'\nimport Error from './Error'\n\nfunction SignupForm(props){\n    const errorBlock = (props.error)? <Error error={props.error} /> : null\n    const [user, setUser] = useState({});\n\n    const submitNewUser=()=>{\n        if(user.password !== user.repeatpassword){\n            props.setError(\"Error: The second password is different.\")\n            setUser({username:user.username})\n            return;\n        }\n        props.signup({username:user.username, password:user.password})\n    }\n\n    return(\n        <form className={props.class}>\n             {errorBlock}\n            <label className='formContent' htmlFor=\"account\">Account:</label>\n            <input className='formContent roundedborder' type=\"text\" id=\"signupaccount\" name=\"account\" value={user.username} onChange={(e)=>setUser({...user, username:e.target.value})}/>\n            <label className='formContent' htmlFor=\"password\">Password:</label>\n            <input className='formContent roundedborder' type=\"password\" id=\"signuppassword\" name=\"password\" value={user.password} onChange={(e)=>setUser({...user, password:e.target.value})}/>\n            <label className='formContent' htmlFor=\"repeatPassword\">Input the password again:</label>\n            <input className='formContent roundedborder' type=\"password\" id=\"repeatPassword\" name=\"repeatpassword\" value={user.repeatpassword} onChange={(e)=>setUser({...user, repeatpassword:e.target.value})}/>\n            <button className='formContent formBtn btn btn-info' onClick={(e)=>{e.preventDefault(); submitNewUser()}}>Sign up</button>\n        </form>\n    )\n}\n\nexport default  SignupForm;","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Peer from \"peerjs\";\n\nfunction AskForHelp(props) {\n  const [state, setState] = useState(\"Waiting for establishing connection...\");\n  const [text, setText] = useState(\"Pick up one of the users\");\n  const [peer, setPeer] = useState(new Peer());\n  const [user, setUser] = useState({ id: \"\" });\n  const [candidates, setCandidate] = useState([]);\n  const [otherUser, setOtherUser] = useState({ pickUser: false });\n  const [connection, setConnection] = useState(null);\n  const [recommdation, setRecommdation] = useState(null);\n\n  useEffect(() => {\n    peer.on(\"open\", (id) => {\n      setState(\"Connected.\");\n      setUser({ id: id });\n    });\n    if (connection) {\n      connection.on(\"open\", () => {\n        connection.on(\"data\", (data) => {\n          setRecommdation(data);\n          setText(\"She/He recommends this to you\")\n        });\n        setState(\"Connected to user\");\n        setText(\"Your position is sent to other user\");\n        connection.send(props.user);\n      });\n    }\n  });\n\n  const getCandidate = () => {\n    fetch(\"http://ec2-3-83-164-100.compute-1.amazonaws.com:8088/p2p/getID.do\", {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.status === 0) {\n          let candidateIdString = data.data;\n          let candidateId = candidateIdString.split(\" \");\n          setCandidate(candidateId);\n        }\n      });\n  };\n\n  let recoLink;\n\n  if (recommdation) {\n    recoLink = <a href={recommdation.url}>{recommdation.name}</a>;\n  }\n\n  const candidateList = candidates.map((candidate) => (\n    <li\n      className=\"list-group-item\"\n      onClick={() => {\n        setOtherUser({ id: candidate, pickUser: true });\n        setState(`Connecting to ${candidate}`);\n        let conn = peer.connect(candidate);\n        setConnection(conn);\n      }}\n    >\n      {candidate}\n    </li>\n  ));\n\n  if (otherUser.pickUser) {\n    return (\n      <div className=\"DialogContent Card\" style={{ background: \"white\" }}>\n        <div className=\"card-body\">\n          <h1 className=\"card-title\">{state}</h1>\n          <h6 className=\"card-subtitle mb-2 text-muted\">\n            Your id is {user.id}\n          </h6>\n\n          <p className=\"card-text\">{text}</p>\n        </div>\n        <div className=\"card-body\">{recoLink}</div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"DialogContent Card\" style={{ background: \"white\" }}>\n        <div className=\"card-body\">\n          <h1 className=\"card-title\">{state}</h1>\n          <h6 className=\"card-subtitle mb-2 text-muted\">\n            Your id is {user.id}\n          </h6>\n          <p className=\"card-text\">{text}</p>\n        </div>\n        <ul\n          className=\"list-group list-group-flush\"\n          style={{ overflow: \"scroll\", maxHeight: \"500px\" }}\n        >\n          {candidateList}\n        </ul>\n        <div className=\"card-body\">\n          <button className=\"btn btn-primary\" onClick={() => getCandidate()}>\n            refresh\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user.position,\n  };\n}\n\nexport default connect(mapStateToProps, null)(AskForHelp);\n","import React, { useState, useEffect } from \"react\";\nimport Peer from \"peerjs\";\n\nfunction ProvideHelp(props) {\n  const [state, setState] = useState(\"Waiting for establishing connection...\");\n  const [peer, setPeer] = useState(new Peer());\n  const [user, setUser] = useState({ id: \"\" });\n  const [comm, setComm] = useState(\n    \"People who ask for help will see your id, please stay at this card.\"\n  );\n  const [list, setList] = useState([]);\n  const [conn, setConn] = useState();\n  const [restaurants, setRes] = useState([])\n\n  useEffect(() => {\n    peer.on(\"open\", (id) => {\n      setUser({ id: id });\n      fetch(\n        \"http://ec2-3-83-164-100.compute-1.amazonaws.com:8088/p2p/saveID.do\",\n        {\n          method: \"POST\",\n          mode: \"cors\",\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n          },\n          body: `inputID=${id}`,\n        }\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.status === 0) setState(\"Registered.\");\n        });\n    });\n    peer.on('connection',(conn)=>{\n      setState('Please recommand a restaurant');\n      conn.on('open',()=>{\n        conn.on('data',(data)=>{\n          console.log(data)\n          fetch(\"http://ec2-3-83-164-100.compute-1.amazonaws.com:8088/yelp-fusion/requestRecommend.do\",{\n            method: 'POST',\n            mode:'cors',\n            headers: {\n              \"Content-Type\": \"application/x-www-form-urlencoded\",\n            },\n            body: `latitude=${data.latitude}&longitude=${data.longtitude}&price=1&term=Chinese`,\n          }).then(response=>response.json())\n          .then((res)=>{\n            setRes(JSON.parse(res.data))\n          })\n        })\n      })\n      setConn(conn);\n    })\n  });\n\n\n  let restaurantsList = restaurants.map((restaurant)=>{\n    return (\n      <li className=\"list-group-item\" onClick={()=>{conn.send({name: restaurant.name, url: restaurant.url})}}>{restaurant.name}</li>\n    )\n  })\n\n  return (\n    <div className=\"DialogContent Card\" style={{ background: \"white\" }}>\n      <div className=\"card-body\">\n        <h1 className=\"card-title\">{state}</h1>\n        <h6 className=\"card-subtitle mb-2 text-muted\">Your id is {user.id}</h6>\n        <p className=\"card-text\"></p>\n        <ul\n          className=\"list-group list-group-flush\"\n          style={{ overflow: \"scroll\", maxHeight: \"500px\" }}\n        >\n          {restaurantsList}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default ProvideHelp;\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { initUser, getPosition } from \"../../action/user\";\nimport { setError, removeError } from \"../../action/error\";\nimport \"./Navbar.css\";\nimport Dialog from \"../Dialog/Dialog\";\nimport LoginForm from \"./LoginForm\";\nimport SignupForm from \"./SignupForm\";\nimport AskForHelp from \"../P2pPanel/AskForHelp\";\nimport ProvideHelp from \"../P2pPanel/ProvideHelp\";\n\nconst server_url = 'http://wywe.azurewebsites.net'\n\nfunction Navbar(props) {\n  const [login, toggleLoginDialog] = useState(false);\n  const [signup, toggleSignUpDialog] = useState(false);\n  useEffect(() => {\n    props.init();\n  });\n  const logo = <div>WHAT DO YOU WANT TO EAT?</div>;\n  if (props.userName) {\n    return (\n      <nav>\n        {logo}\n        <div>Welcom back, {props.userName}</div>\n        <div>\n          <button\n            className=\"nav-btn btn btn-light\"\n            onClick={() => {\n              toggleLoginDialog(true);\n            }}\n          >\n            Ask for help\n          </button>\n          <button\n            className=\"nav-btn btn btn-light\"\n            onClick={() => toggleSignUpDialog(true)}\n          >\n            I'm willing to help\n          </button>\n        </div>\n        <Dialog show={login} toggleShow={toggleLoginDialog}>\n          <AskForHelp></AskForHelp>\n        </Dialog>\n        <Dialog show={signup} toggleShow={toggleSignUpDialog}>\n          <ProvideHelp></ProvideHelp>\n        </Dialog>\n      </nav>\n    );\n  }\n\n  return (\n    <nav>\n      {logo}\n      <div>\n        <button\n          className=\"nav-btn btn btn-light\"\n          onClick={() => {\n            console.log(\"clicked!\");\n            toggleLoginDialog(true);\n          }}\n        >\n          login\n        </button>\n        <button\n          className=\"nav-btn btn btn-light\"\n          onClick={() => toggleSignUpDialog(true)}\n        >\n          signup\n        </button>\n      </div>\n      <Dialog show={login} toggleShow={toggleLoginDialog}>\n        <LoginForm\n          error={props.error}\n          login={props.login}\n          class=\"DialogContent\"\n        />\n      </Dialog>\n      <Dialog show={signup} toggleShow={toggleSignUpDialog}>\n        <SignupForm\n          setError={props.setError}\n          error={props.error}\n          signup={props.signup}\n          class=\"DialogContent\"\n        />\n      </Dialog>\n    </nav>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userName: state.user.userName,\n    userID: state.user.userID,\n    error: state.error.message,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    login: (user) => {\n      fetch(server_url + \"/api/auth/login\", {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(user),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.error) throw new Error(data.error.message);\n          dispatch(initUser(data));\n          dispatch(removeError());\n        })\n        .catch((error) => {\n          dispatch(setError(String(error)));\n        });\n    },\n    init: () => {\n      fetch(server_url + \"/api/auth\", {\n        method: \"GET\",\n        credentials: \"include\",\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.error) throw new Error(data.error.message);\n          dispatch(initUser(data));\n          dispatch(removeError());\n          dispatch(\n            getPosition({\n              latitude: 40,\n              longitude: -77,\n            })\n          );\n        })\n        .catch((error) => {\n          //do nothing\n        });\n    },\n    signup: (user) => {\n      fetch(server_url + \"/api/auth/signup\", {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(user),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.error) throw new Error(data.error.message);\n          dispatch(initUser(data));\n          dispatch(removeError());\n        })\n        .catch((error) => {\n          dispatch(setError(String(error)));\n        });\n    },\n    setError: (error) => {\n      dispatch(setError(error));\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n","import React from 'react';\nimport './App.css';\nimport {Provider} from 'react-redux'\nimport Panel from './component/Restarant_card/Panel'\nimport store from './stores'\nimport Navbar from './component/Navbar/Navbar'\n\nfunction App() {\n  return (        \n    <Provider store={store}>    \n      <Navbar/>\n      <Panel></Panel>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}